doctype html
html(lang='en')

    head

        meta(charset='utf-8')
        meta(name='viewport', content='width=device-width, initial-scale=1, shrink-to-fit=no')
        meta(name='description', content="Solving complex challenges with care. Engineers. Computer Scientists. Both.")
        meta(name='author', content='nablify')
        meta(name="msapplication-TileColor", content="#212d3f")
        meta(name="theme-color", content="#ffffff")
        meta(name="robots", content="follow, index")

        <!-- Primary Meta Tags -->
        meta(name="title" content="nablify - make positive change")
        meta(name="description", content="Solving complex challenges with care. Engineers. Computer Scientists. Both.")

        <!-- Open Graph / Facebook -->
        meta(property="og:type", content="website")
        meta(property="og:url", content="https://www.nablify.com/")
        meta(property="og:title", content="nablify - make positive change")
        meta(property="og:description", content="Solving complex challenges with care. Engineers. Computer Scientists. Both.")
        meta(property="og:image", content="https://www.nablify.com/assets/img/thumbnail.png")

        <!-- Twitter -->
        meta(property="twitter:card", content="summary_large_image")
        meta(property="twitter:url", content="https://www.nablify.com/")
        meta(property="twitter:title", content="nablify - make positive change")
        meta(property="twitter:description", content="Solving complex challenges with care. Engineers. Computer Scientists. Both.")
        meta(property="twitter:image", content="https://www.nablify.com/assets/img/thumbnail.png")

        title nablify: make positive change

        link(rel="icon", type="image/svg+xml", href="assets/favicon/favicon.svg")
        link(rel="icon", type="image/png", href="assets/favicon/favicon.png")

        // Bootstrap icons
        link(href='https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.2/font/bootstrap-icons.min.css', rel='stylesheet')

        // fonts
        link(rel='preconnect', href='https://fonts.gstatic.com')
        link(href='https://fonts.googleapis.com/css2?family=Lato:ital,wght@0,100;0,300;0,400;0,700;0,900;1,100;1,300;1,400;1,700;1,900&family=Open+Sans:ital,wght@0,300;0,400;0,500;0,600;0,700;0,800;1,300;1,400;1,500;1,600;1,700;1,800&family=Playfair+Display:ital,wght@0,400;0,500;0,600;0,700;0,800;0,900;1,400;1,500;1,600;1,700;1,800;1,900&family=Source+Serif+4:ital,opsz,wght@0,8..60,200;0,8..60,300;0,8..60,400;0,8..60,500;0,8..60,600;0,8..60,700;0,8..60,800;0,8..60,900;1,8..60,200;1,8..60,300;1,8..60,400;1,8..60,500;1,8..60,600;1,8..60,700;1,8..60,800;1,8..60,900&display=swap', rel='stylesheet')
        link(href="https://fonts.cdnfonts.com/css/metropolis-2", rel='stylesheet')

        script(src="https://polyfill.io/v3/polyfill.min.js?features=es6")
        script(id="MathJax-script", src="https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js")
        script(src='https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js')

        // map
        link(href="https://api.mapbox.com/mapbox-gl-js/v3.0.1/mapbox-gl.css", rel="stylesheet")
        script(src="https://api.mapbox.com/mapbox-gl-js/v3.0.1/mapbox-gl.js")

        // Core theme JS
        script(src='js/scripts.js')
        script(id="shader-vs", type="x-shader/x-vertex").
            attribute vec3 vPos;
            void main(void){
              gl_Position = vec4(vPos, 1.);
            }

        script(id="shader-fs", type="x-shader/x-fragment").
            precision highp float;
            uniform vec2 ComplexConstant;
            uniform float fViewportSize;
            uniform float blend;
            void main(void)
            {
               const int nMaxIter = 128;
               float R = 3.5 * (gl_FragCoord.x - fViewportSize / 2.0)  / fViewportSize - 0.25;
               float I = 3.5 * (gl_FragCoord.y - fViewportSize / 2.0)  / fViewportSize;
               float Real0 = R;
               float Imag0 = I;
               int LastIter;
               float fRealConstant = blend * ComplexConstant.x + (1.0 - blend ) * Real0;
               float fImagConstant = blend * ComplexConstant.y + (1.0 - blend ) * Imag0;
               float R2 = R*R;
               float I2 = I*I;
                           for(int iter = 0; iter < nMaxIter; iter ++){
            		I=(R+R)*I + fImagConstant;
            		R=R2-I2 + fRealConstant;
            		R2=R*R;
            		I2=I*I;
            		LastIter = iter ;
            		if( R2+I2 > 4.0 )
            			break;
            	 }
               if (LastIter  == nMaxIter-1) {
                  gl_FragColor = vec4(0., 0., 0., 1.);
               } else {
                  float fValue = mod(float(LastIter),2.0);
                  float angle = 2.0 * 3.14 * float(LastIter) / float(nMaxIter) ;
                  gl_FragColor = vec4(1.0 - (0.5+0.5*cos(angle*2.0)),
            		    				1.0 - (0.5+0.5*cos(angle*3.0)),
            			    			1.0 - (0.5+0.5*cos(angle*5.0)),
            				    		1.0);
              }
            }

        script(type="text/javascript").
            function getShader (gl, id){
               var shaderScript = document.getElementById ( id );
               var str = "";
               var k = shaderScript.firstChild;
               var shader;
               while (k){
                 if ( k.nodeType == 3 ) str += k.textContent;
                 k = k.nextSibling;
               }
               if ( shaderScript.type == "x-shader/x-fragment" ){
                  shader = gl.createShader ( gl.FRAGMENT_SHADER );
               }
               else {
                	if ( shaderScript.type == "x-shader/x-vertex" ) {
                      shader = gl.createShader(gl.VERTEX_SHADER);
                   } else {
                	    return null;
                  }
               }
               gl.shaderSource(shader, str);
               gl.compileShader(shader);
               if (gl.getShaderParameter(shader, gl.COMPILE_STATUS) == 0){
                  alert(gl.getShaderInfoLog(shader));
               }
               return shader;
            }

            requestAnimFrame = function(){
              return  window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || function(callback, element){ window.setTimeout(callback, 1000 / 60); }
            }();

            var gl, canvas;
            var cLoc, size, frames = 0, BlendLoc, Blend,ViewportSizeLoc;
            function init_animation(){
                canvas = document.getElementById("canvas");
                size = Math.min(canvas.width, canvas.height);
                canvas.width = size;
                canvas.height = size;
                if (!window.WebGLRenderingContext){
                  alert("Your browser does not support WebGL. See http://get.webgl.org");
                  return;
                }
                try {
            	    gl = canvas.getContext("experimental-webgl");
                    if (!gl) {
                        // if failed, try experimental one
                        gl = canvas.getContext("webgl");
                            if (!gl) {
                            alert("Your browser does not support WebGL");
                            return;
                        }
                    }
                } catch(e) {}

                gl.viewport(0, 0, size, size);
                var prog  = gl.createProgram();
                gl.attachShader(prog, getShader( gl, "shader-vs" ));
                gl.attachShader(prog, getShader( gl, "shader-fs" ));
                gl.linkProgram(prog);
                gl.useProgram(prog);
                var posAtrLoc = gl.getAttribLocation(prog, "vPos");
                gl.enableVertexAttribArray( posAtrLoc );
                var posBuffer = gl.createBuffer();
                gl.bindBuffer(gl.ARRAY_BUFFER, posBuffer);
                var vertices = new Float32Array([-1.0,-1.0, 0.0,   1.0,-1.0, 0.0,   -1.0, 1.0, 0.0,  -1.0,1.0,0.0,   1.0,-1.0,0.0,    1.0,1.0,0.0]);
                gl.bufferData(gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW);
                gl.vertexAttribPointer(posAtrLoc, 3, gl.FLOAT, false, 0, 0);
                cLoc = gl.getUniformLocation(prog,"ComplexConstant");
                BlendLoc = gl.getUniformLocation(prog,"blend");
                ViewportSizeLoc = gl.getUniformLocation(prog,"fViewportSize");
                gl.uniform1f( ViewportSizeLoc, size);
                anim();
            }

            function anim(){
            	var tim = new Date().getTime()/1000;
            	var Real = Math.sin(tim/4.1);
            	var Imag = Math.cos(tim/4.1);
            	var Blend = Math.sin(tim/3.1) * Math.cos(tim/5.2);
            	gl.uniform2f( cLoc, Real, Imag);
            	gl.uniform1f( BlendLoc, Blend);
            	drawScene();
            	frames++;
            	requestAnimFrame(anim);
            }

            function drawScene(){
               gl.drawArrays(gl.TRIANGLES, 0, 6);
               gl.flush ();
            }

        script.
            MathJax = {
            loader: {load: ['input/asciimath', 'output/chtml']}
            }

        // Core theme CSS (includes Bootstrap)
        link(href='css/styles.css', rel='stylesheet')

    body#top(onLoad='init_animation();')
        // navigation
        nav#mainNav.navbar.navbar-expand-lg.navbar-light.fixed-top.shadow-sm
            .container.px-5
                a.navbar-brand.fw-bold(href='#top')
                    img(src='assets/img/logo.svg', alt='...', style='height: 3rem;')
                button.navbar-toggler(type='button', data-bs-toggle='collapse', data-bs-target='#navbarResponsive', aria-controls='navbarResponsive', aria-expanded='false', aria-label='Toggle navigation')
                    |
                    i.bi-list
                #navbarResponsive.collapse.navbar-collapse
                    ul.navbar-nav.ms-auto.me-4.my-3.my-lg-0
                        li.nav-item
                            a.nav-link.me-lg-3(href='#expertise') Expertise
                        li.nav-item
                            a.nav-link.me-lg-3(href='#services') Services
                        li.nav-item
                            a.nav-link.me-lg-3(href='#stories') Stories
                        li.nav-item
                            a.nav-link.me-lg-3(href='#values') Values
                        li.nav-item
                            a.nav-link.me-lg-3(href='#team') Team
                        li.nav-item
                            a.nav-link.me-lg-3(href='#careers') Join
                        li.nav-item
                            a.nav-link.me-lg-3(href='#partners') Partners

                    button.btn.btn-secondary.rounded-pill.px-3.mb-2.mb-lg-0
                        span.d-flex.align-items-center
                            i.bi-chat-text-fill.me-2
                            a.small(href='#contact').text-decoration-none Let's talk


        // masthead header
        header.masthead
            .container.px-5
                .row.gx-5.align-items-center
                    .col-lg-7
                        // masthead text and app badges
                        .mb-5.mb-lg-7.text-center.text-lg-start
                            h1.display-1.lh-1.mb-3
                                | Solving
                                | complex challenges
                                | with care.
                            p.lead.fw-normal.text-muted.mb-5
                                | Engineers. Computer scientists. Both.
                        button.btn.btn-primary.rounded-pill.px-3.mb-2.mb-lg-0
                            span.d-flex.align-items-center
                                a.small(href='#expertise').text-white.text-decoration-none Discover more
                    .col-lg-5.mt-5
                        canvas#canvas(width='400', height='400').img-fluid.rounded-circle.mx-auto.d-block.mb-5

        // definition section
        section.bg-primary
            .container.px-5.data-nosnippet
                .row.gx-5.align-items-center.text-white.justify-content-center
                    .col-lg-8
                        p.definition-title nablify
                        span.definition-pronunciation.fs-3  /'n&#xe6;-bli-figh/
                            span.definition-type verb
                        hr.definition-hr
                        p.definition-text.fs-4
                            | care and make remarkable change happen with a state-of-the-art solution
                            | to a challenge using science and technology.
                            br
                            br
                        p.definition-origin.fs-4
                            span.definition-origin.name.fs-3 ORIGIN
                            | from
                            span.definition-origin.greekname 'nabla'
                            span , mathematical symbol and operator
                            span.definition-origin.nabla.fs-3 \( \nabla \)
                            span used to determine the direction of the greatest change in a function.

        include includes/expertise.pug
        include includes/aims.pug
        include includes/stories.pug
        include includes/values.pug
        include includes/team.pug

        // call to action section
        section#careers.cta
            .cta-content
                .container.px-5.data-nosnippet
                    h2.text-white.display-1.lh-1.mb-4
                        | Ready to nablify?
                    a.btn.btn-outline-light.py-3.px-4.rounded-pill(href='https://www.linkedin.com/company/nablify')
                        | Find your next opportunity &nbsp;
                        i.bi.bi-linkedin

        include includes/partners.pug
        include includes/contact.pug

        // footer
        footer.bg-white.text-center.py-5
            .container.px-5.data-nosnippet
                .small.mb-2
                    | Registration #: B 28 28 56 &nbsp;&nbsp; VAT #: LU 354 109 67
                .small.mb-2
                    | Follow us:
                    a(href='https://www.linkedin.com/company/nablify')
                        i.bi.bi-linkedin
                .small.mb-2.mt-2
                    #dateDiv ___

        script
            | link_mainURL = '<i class="bi bi-c-square"></i>&nbsp;&nbsp;<a href="https://www.nablify.com">nablify</a>&nbsp;-&nbsp;';
            | document.getElementById("dateDiv").innerHTML =  link_mainURL + new Date().getFullYear() + '.&nbsp;&nbsp;';
